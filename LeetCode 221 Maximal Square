class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if( matrix.empty() )    
          return 0;
        int n = matrix.size();
        int m = matrix[0].size();
        int large = 0;
        int i,j;
        vector<vector<int> > dp(n, vector<int>(m, 0));
   
        for( j=0; j<m; j++ ){
            dp[0][j] = matrix[0][j] - '0';
            large = max(large, dp[0][j]);
        }
   
        for( i=1; i<n; i++ ){
            dp[i][0] = matrix[i][0] - '0';
            large = max(large, dp[i][0]);
        }
        
        for( i=1; i<n; i++ ){
            for( j=1; j<m; j++ ){
                if(matrix[i][j] == '1'){
                    dp[i][j] = min(dp[i-1][j-1], min(dp[i-1][j], dp[i][j-1])) + 1;
                    large = max(large, dp[i][j]);
                }
            }
        }
        
        return large*large;
    }
};
